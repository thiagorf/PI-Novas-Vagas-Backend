// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  applicant
  enterprise 
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String
  password String

  type UserType @default(applicant)

  applicant Applicant?
  enterprise Enterprise?

  cellphone CellPhone?
  socialmedia SocialMedia?
}

model CellPhone {
  id Int @id @default(autoincrement())

  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

model SocialMedia {
  id Int @id @default(autoincrement())
  name String
  reference String

  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

//Candidato -> Applicant
model Applicant {
  id Int @id @default(autoincrement())
  photo String
  curriculum String

  user_id Int @unique
  user User @relation(fields: [user_id], references: [id])

  jobs ApplicantForJobs[]
}

//Emrpesa -> Entreprise
model Enterprise {
  id Int @id @default(autoincrement())
  cnpj String
  segment String
  cep Int

  user_id Int @unique
  user User @relation(fields: [user_id], references: [id])

  jobs Jobs[]
}

// Vagas -> Jobs
model Jobs {
  id        Int      @id @default(autoincrement())
  title String
  salary String
  address String
  description String

  enterprise Enterprise @relation(references: [id], fields: [enterprise_id])
  enterprise_id Int

  started_at DateTime @default(now())
  ends_at DateTime

  applicants ApplicantForJobs[]

}

//Applicant n..* Jobs
model ApplicantForJobs {
  id Int @id @default(autoincrement())

  applicant Applicant @relation(fields: [applicant_id], references: [id])
  applicant_id Int

  jobs Jobs @relation(fields: [jobs_id], references: [id])
  jobs_id Int 

  created_at DateTime @default(now())
}


//Contato - Pagamento -> pesquisar mais
